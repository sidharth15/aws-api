AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  LambdaFunctionName:
    Type: String
  LambdaFunctionArn:
    Type: String
Resources:
  PutAnnouncementAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "PutAnnouncement API"
      Description: "Api created using cloudformation"

  PutAnnouncementModel:
    Type: "AWS::ApiGateway::Model"
    Properties:
      ContentType: "application/json"
      Name: "PutAnnouncementModel"
      RestApiId: !Ref PutAnnouncementAPI
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        title: PutAnnouncementModel
        type: object
        additionalProperties: false
        properties:
          title:
            type: string
            minLength: 1
          date:
            type: string
            minLength: 1
        required: ["title", "date"]

  MethodResponseModel:
    Type: "AWS::ApiGateway::Model"
    Properties:
      ContentType: "application/json"
      Name: "MethodResponseModel"
      RestApiId: !Ref PutAnnouncementAPI
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        title: MethodResponseModel
        type: object
        additionalProperties: false
        properties:
          status:
            type: string
          message:
            type: string

  AnnouncementResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref PutAnnouncementAPI
      ParentId: !GetAtt PutAnnouncementAPI.RootResourceId
      PathPart: announcement
  
  AnnouncementPostMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: POST
      ResourceId: !Ref AnnouncementResource
      RestApiId: !Ref PutAnnouncementAPI
      AuthorizationType: NONE
      RequestModels:
        "application/json": !Ref PutAnnouncementModel
      RequestValidatorId: !Ref PutAnnouncementRequestValidator
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Join [ "", [ "arn:aws:apigateway:", !Ref "AWS::Region", ":lambda:path/2015-03-31/functions/", !Ref LambdaFunctionArn, "/invocations" ] ]
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          "application/json": "#set($inputRoot = $input.path('$')) { \"title\" : \"$inputRoot.title\", \"date\" : \"$inputRoot.date\"}"
        IntegrationResponses:
          - ResponseTemplates:
              "application/json": "#set($inputRoot = $input.path('$')){\"statusCode\" : \"$inputRoot.status\",\"messageFromLambda\" : \"$inputRoot.message\"}"
            StatusCode: 200
      MethodResponses:
        - 
          ResponseModels:
            "application/json": !Ref MethodResponseModel
          StatusCode: 200
  
  PutAnnouncementRequestValidator:
    Type: "AWS::ApiGateway::RequestValidator"
    Properties:
      Name: put-announcement-request-validator
      RestApiId: !Ref PutAnnouncementAPI
      ValidateRequestBody: true

  ApiGatewayLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:invokeFunction
      FunctionName: !Ref LambdaFunctionName
      Principal: apigateway.amazonaws.com