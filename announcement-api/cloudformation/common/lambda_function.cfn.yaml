AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  FunctionName:
    Type: String
  FunctionHandler:
    Type: String
  FunctionRoleArn:
    Type: String
  S3Key:
    Type: String
  S3Bucket:
    Type: String
  ErrorReportingLambdaFunctionArn:
    Type: String
  ErrorReportingLambdaFunctionName:
    Type: String

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      Code: 
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Description: "lambda function created using cloudformation"
      FunctionName: !Ref FunctionName
      Handler: !Ref FunctionHandler
      Role: !Ref FunctionRoleArn
      Runtime: "python3.6"
      Tags: 
        -
          Key: "Name"
          Value: "Sample lambda function"
      Timeout: 3
  
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ["/", ["/aws/lambda", !Ref FunctionName]]
      RetentionInDays: 7

  ErrorReportingSubscription:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref ErrorReportingLambdaFunctionArn
      FilterPattern: "?ERROR"
      LogGroupName: !Ref LogGroup

  ErrorReportingLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:invokeFunction
      FunctionName: !Ref ErrorReportingLambdaFunctionName
      Principal: logs.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt LogGroup.Arn
Outputs:
  FunctionArn:
    Value: !GetAtt LambdaFunction.Arn
  FunctionName:
    Value: !Ref LambdaFunction
  LogGroupArn:
    Value: !GetAtt LogGroup.Arn