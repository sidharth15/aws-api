AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # DynamoDB table to store announcements
  AnnouncementsTable:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://sidharthramesh.s3-eu-west-1.amazonaws.com/db.cfn.yaml"
      Parameters:
        TableName: "announcements"

  # common IAM role used by both lambda functions
  LambdaFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: DynamoDbCloudWatchAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents" 
                Resource: '*'
              
              - Effect: Allow
                Action: 
                  - "dynamodb:PutItem"
                  - "dynamodb:Scan"
                  - "dynamodb:GetItem"
                Resource: 
                  Fn::GetAtt:
                    - AnnouncementsTable
                    - Outputs.TableArn
                  #'Fn::Join': ['/', [!Join [':',['arn:aws:dynamodb', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'table']] ,!Ref AnnouncementsTable]]
      RoleName: LambdaToDynamoDbAccessRole
  
  PutAnnouncementLambdaFunction:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://sidharthramesh.s3-eu-west-1.amazonaws.com/common/lambda_function.cfn.yaml"
      Parameters:
        FunctionName: "put_announcement_function"
        FunctionHandler: "put_announcement.lambda_handler"
        FunctionRoleArn: !GetAtt LambdaFunctionIAMRole.Arn
        S3Bucket: "sidharthramesh"
        S3Key: "put_announcement.zip"
        ErrorReportingLambdaFunctionArn:
          Fn::GetAtt:
            - ErrorReportingStack
            - Outputs.ErrorReportingLambdaFunctionArn
        ErrorReportingLambdaFunctionName:
          Fn::GetAtt:
            - ErrorReportingStack
            - Outputs.ErrorReportingLambdaFunctionName

  # creates an sns topic with email subscription
  # and a Lambda function that publishes to this topic
  # when an error is found in the linked log groups
  ErrorReportingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://sidharthramesh.s3-eu-west-1.amazonaws.com/error_reporting.cfn.yaml"
    
  ListAnnouncementsLambdaFunction:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://sidharthramesh.s3-eu-west-1.amazonaws.com/common/lambda_function.cfn.yaml"
      Parameters:
        FunctionName: "list_announcements_function"
        FunctionHandler: "list_announcements.lambda_handler"
        FunctionRoleArn: !GetAtt LambdaFunctionIAMRole.Arn
        S3Bucket: "sidharthramesh"
        S3Key: "list_announcements.zip"
        ErrorReportingLambdaFunctionArn:
          Fn::GetAtt:
            - ErrorReportingStack
            - Outputs.ErrorReportingLambdaFunctionArn
        ErrorReportingLambdaFunctionName:
          Fn::GetAtt:
            - ErrorReportingStack
            - Outputs.ErrorReportingLambdaFunctionName
  
  # API Gateway REST api
  AnnouncementAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://sidharthramesh.s3-eu-west-1.amazonaws.com/announcement_api.cfn.yaml"
      Parameters:
        PutAnnouncementLambdaFunctionName: 
          Fn::GetAtt:
            - PutAnnouncementLambdaFunction
            - Outputs.FunctionName
        PutAnnouncementLambdaFunctionArn:
          Fn::GetAtt:
            - PutAnnouncementLambdaFunction
            - Outputs.FunctionArn
        ListAnnouncementsLambdaFunctionName: 
          Fn::GetAtt:
            - ListAnnouncementsLambdaFunction
            - Outputs.FunctionName
        ListAnnouncementsLambdaFunctionArn:
          Fn::GetAtt:
            - ListAnnouncementsLambdaFunction
            - Outputs.FunctionArn

Outputs:
  ListAnnouncementsEndpointURL:
    Description: "Endpoint URL for list-announcements API exposed by API Gateway"
    Value: 
      Fn::GetAtt:
        - AnnouncementAPI
        - Outputs.ApiUrl